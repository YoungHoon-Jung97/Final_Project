<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nutmag.project.dao.IUserDAO">
	
	<!-- 정보 입력 프로시저  -->
	<insert id="userInsert" parameterType="com.nutmag.project.dto.UserDTO" statementType="CALLABLE">
        CALL PRC_USER_INSERT(
            #{user_name,			jdbcType=VARCHAR},
            #{user_pwd,				jdbcType=VARCHAR},
            #{user_email,			jdbcType=VARCHAR},
            #{user_ssn1,			jdbcType=VARCHAR},
            #{user_ssn2,			jdbcType=VARCHAR},
            #{user_tel,				jdbcType=VARCHAR},
            #{user_postal_addr,		jdbcType=VARCHAR},
            #{user_addr,			jdbcType=VARCHAR},
            #{user_detailed_addr,	jdbcType=VARCHAR},
            #{user_nick_name,		jdbcType=VARCHAR}
        )
    </insert>
	
	<!-- 로그인 -->
	<select id="userLoginKo" resultType="com.nutmag.project.dto.UserDTO">
		SELECT USER_ID, USER_NAME, USER_EMAIL, USER_CODE_ID, USER_NICK_NAME
		FROM USER_INFO
		WHERE USER_EMAIL = #{logEmailKo} AND USER_PWD = #{logPwKo}
	</select>
	
	<select id="userLoginEn" resultType="com.nutmag.project.dto.UserDTO">
		SELECT USER_ID, USER_NAME, USER_EMAIL, USER_CODE_ID, USER_NICK_NAME
		FROM USER_INFO
		WHERE USER_EMAIL = #{logEmailEn} AND USER_PWD = #{logPwEn}
	</select>
	
	<!-- 아이디 중복 확인 -->
	<select id="searchEmail" resultType="int">
		SELECT COUNT(*)
		FROM USER_INFO
		WHERE USER_EMAIL = #{email}
	</select>

	<!-- 닉네임 중복 확인 -->
	<select id="searchnickName" resultType="int">
		SELECT COUNT(*)
		FROM USER_INFO
		WHERE USER_NICK_NAME = #{nickName}
	</select>
	
	<!-- 구장 운영자 이메일 중복 확인-->
	<select id="searchEmailOperator" resultType="int">
		SELECT COUNT(*)
		FROM OPERATOR_INFO
		WHERE OPERATOR_EMAIL = #{email}
	</select>
	
	<!-- 계좌번호 중복 확인 -->
	<select id="searchAccountOperator" resultType="int">
		SELECT COUNT(*)
		FROM OPERATOR_INFO
		WHERE OPERATOR_ACCOUNT_NO = #{accountNo}
	</select>
	
	<!-- 운영자 등록  -->
	<insert id="operatorInsert" parameterType="com.nutmag.project.dto.StadiumRegInsertDTO">
		INSERT INTO OPERATOR_INFO (OPERATOR_ID, OPERATOR_EMAIL, OPERATOR_NAME
								 , OPERATOR_TEL, OPERATOR_ACCOUNT_NO
								 , OPERATOR_ACCOUNT_HOLDER , BANK_ID, USER_CODE_ID)
		VALUES (OPERATOR_INFO_SEQ.NEXTVAL, #{operator_email}, #{operator_name}, #{operator_tel}
				, #{operator_account_no}, #{operator_account_holder}, #{bank_id}, #{user_code_id})
	</insert>
	
	<!-- 구장 운영자 인증 -->
	<select id="operatorSearchId" resultType="Integer">
		SELECT OPERATOR_ID
		FROM OPERATOR_INFO
		WHERE USER_CODE_ID = #{user_code_id}
	</select>
	
	<!-- 구장 운영자 정보 불러오기 -->
	<select id="operatorLoginInfo" resultType="com.nutmag.project.dto.OperatorDTO">
		SELECT *
		FROM OPERATOR_INFO
		WHERE USER_CODE_ID = #{user_code_id}
	</select>
	
	<!-- 구장 운영자 예약 미승인 경기장 불러오기 -->
	<select id="fieldBeforeResApprList" resultType="com.nutmag.project.dto.FieldResMainPageDTO">
		SELECT *
		FROM FIELD_OPERATOR_RES_VIEW V
		WHERE V.FIELD_RES_PAY_AT IS NULL
		  AND V.OPERATOR_ID = #{operator_id}
		  AND NOT EXISTS (
		      SELECT 1
		      FROM FIELD_PAY_CANCEL C
		      WHERE C.FIELD_RES_ID = V.FIELD_RES_ID
		  )
	</select>
	
	<!-- 구장 운영자 경기장 예약 승인 -->
	<update id="fieldResApprInsert">
		UPDATE FIELD_RES
		SET FIELD_RES_PAY_AT = SYSDATE
		WHERE FIELD_RES_ID = #{field_res_id}
	</update>
	
	<!-- 구장 운영자 경기장 예약 반려  -->
	<insert id="fieldResApprCancelInsert" parameterType="com.nutmag.project.dto.OperatorResCancelDTO">
		INSERT INTO FIELD_PAY_CANCEL (FIELD_PAY_CANCEL_ID,FIELD_PAY_CANCEL_AT
									,FIELD_PAY_CANCEL_REASON,FIELD_RES_ID)
		
		VALUES (FIELD_PAY_CANCEL_SEQ.NEXTVAL,SYSDATE,#{field_pay_cancel_reason, jdbcType=VARCHAR},#{field_res_id})
	</insert>
	
	
	<!-- 이메일, 전화번호 확인 -->
	<select id="findEmailsByBirthAndTel" resultType="string">
	    SELECT USER_EMAIL
	    FROM USER_INFO
	    WHERE USER_TEL = #{tel}
	      AND USER_SSN1 = #{birth}
	</select>

	<!--  이메일, 비밀번호 확인  -->
	<select id="checkUserForPwd" resultType="int"> 
	SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END 
	FROM USER_INFO 
	WHERE USER_EMAIL = #{email} 
	AND USER_TEL = #{tel} 
	</select>
	
	<!--  임시 비밀번호  -->
	<update id="updateTempPassword">
	UPDATE USER_INFO SET USER_PWD = #{pwd} 
	WHERE USER_EMAIL = #{email} 
	</update>
	
	<!-- 회원 정보 가져오기 -->
	<select id="getUser" parameterType="int" resultType="com.nutmag.project.dto.UserDTO">
	SELECT USER_NAME,USER_EMAIL,USER_PWD,USER_TEL,USER_NICK_NAME,USER_SSN1,USER_SSN2
		 , USER_ADDR, USER_POSTAL_ADDR, USER_DETAILED_ADDR, USER_CODE_ID
	FROM USER_INFO
	WHERE user_id = #{user_code_id}
	</select>
	
	<!-- 회원 찾기 -->
	<select id="userUpdate" parameterType="int" resultType="com.nutmag.project.dto.UserDTO">
	SELECT USER_NAME,USER_EMAIL,USER_PWD,USER_TEL,USER_NICK_NAME,USER_SSN1,USER_SSN2
		 , USER_ADDR, USER_POSTAL_ADDR, USER_DETAILED_ADDR
	FROM USER_INFO
	WHERE user_id = #{user_code_id}
	</select>
	
	<!-- 이메일로 사용자 정보 조회 -->
	<select id="getUserByEmail" resultType="com.nutmag.project.dto.UserDTO">
	    SELECT * FROM users WHERE user_email = #{email}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="updateUser" parameterType="com.nutmag.project.dto.UserDTO">
        UPDATE user_info
        SET user_pwd = #{user_pwd}, user_tel = #{user_tel}
          , user_addr = #{user_addr}, user_detailed_addr = #{user_detailed_addr}
          , user_postal_addr = #{user_postal_addr} 
        WHERE user_code_id = #{user_code_id}
    </update>
	
</mapper>